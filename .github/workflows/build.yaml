name: Build

on: push

jobs:
  mac:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Update Submodules
        run: |
          git submodule update --recursive --remote
      - name: Commit Update
        uses: stefanzweifel/git-auto-commit-action@v5
      # 后面对文件可能进行修改，不要在这里commit 
      - name: Compile aria2
        run: |
          cd aria2-git
          brew install libxml2 libcpuid autoconf automake autotools autopoint libtool
          autoreconf -i
          ./configure ARIA2_STATIC=yes
          make
          cp src/aria2c ../aria2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: pip install -r requirements.txt
      - name: Install macos dependencies
        run: |
          brew install create-dmg
          brew install python-tk
          brew install aria2
      - name: Build MacOS application
        run : |
          pyinstaller -n "SJTU-Canvas视频下载器" -w main.py
          mkdir -p dist/dmg
          cp -r dist/SJTU-Canvas视频下载器.app dist/dmg
      - name: Create dmg
        run : 
          create-dmg --volname "SJTU-Canvas视频下载器" "dist/SJTU-Canvas视频下载器.dmg" "dist/dmg/"
      - name: Upload dmg
        uses: actions/upload-artifact@v3.1.2
        with:
          name: canvas-downloader-macos.dmg
          path: "dist/SJTU-Canvas视频下载器.dmg"
  # win:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - run: pip install -r requirements.txt
  #     - run: pyinstaller main.py
  #     - run: xcopy aria2\ dist\main\aria2\ /e /i /y
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: windows
  #         path: dist/main/
  #     - run: Compress-Archive dist\main\* windows.zip
  #     - id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.event.repository.pushed_at}}
  #         release_name: ${{ github.event.repository.pushed_at}}
  #     - uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: windows.zip
  #         asset_name: windows.zip
  #         asset_content_type: application/zip
